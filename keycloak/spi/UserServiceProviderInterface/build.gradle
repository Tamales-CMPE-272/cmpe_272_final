plugins {
    id 'java'
    id 'io.quarkus'
    id 'org.jetbrains.kotlin.jvm'
}

java {
}

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
    mavenLocal()
}
group 'cmpe272.tamalesHr'
version '1.0-0'

ext {
    keycloakVersion = '26.2.3'
}

dependencies {
    implementation fileTree(dir: 'lib', include: ['*.jar'])
    implementation 'io.quarkus:quarkus-narayana-jta'
    implementation group: 'org.keycloak', name: 'keycloak-server-spi', version: keycloakVersion
    implementation group: 'org.keycloak', name: 'keycloak-model-jpa', version: keycloakVersion
    implementation group: 'org.keycloak', name: 'keycloak-server-spi-private', version: keycloakVersion
    implementation group: 'org.keycloak', name: 'keycloak-core', version: keycloakVersion
    implementation 'org.slf4j:slf4j-api:2.0.12'

    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-jdbc-mysql'
    implementation "io.quarkus:quarkus-core"
    implementation 'io.quarkus:quarkus-arc'
    testImplementation 'io.quarkus:quarkus-junit5'
    implementation 'io.quarkus:quarkus-hibernate-orm'
    implementation 'io.quarkus:quarkus-agroal'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.0'
    testImplementation 'org.testcontainers:mysql:1.19.0'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'com.google.truth:truth:1.4.0'

    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    implementation 'io.smallrye:jandex:3.2.7'
}

tasks.named("jar") {
    dependsOn("processResources")
}

// Define a Copy task to copy the Jandex JAR
tasks.register('copyJandexJar', Copy) {
    doFirst {
        configurations.runtimeClasspath.resolve()
    }
    from configurations.runtimeClasspath
    include 'jandex-3.1.1.Final.jar'
    into layout.buildDirectory.dir('libs/jandex')
}

tasks.register('listRuntimeClasspath') {
    doLast {
        configurations.runtimeClasspath.each { println it.name }
    }
}